//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using AssemblyCSharp;
using Unity_Code;

namespace AssemblyCSharp
{
	public class MainPiece : IProgrammingPiece
	{

		private ArrayList CodeHeap;
		Dictionary<char, number> VariableDict;

		
		public MainPiece()
		{
			CodeHeap = new ArrayList();

		}

		public void addCode(IProgrammingPiece command)
		{
			CodeHeap.Add(command);


		}

		public void removeCode(IProgrammingPiece command)
		{
			CodeHeap.Remove (command);
		}

		public int Execute()
		{
			foreach (IProgrammingPiece command in CodeHeap) 
			{
				command.Execute();
			}
		}


		public bool AssignVariable(char assignment, int value)
		{
			switch (assignment)
			{
			case 'a':
				if (VariableDict.ContainsKey('a')) VariableDict.Remove('a');
				VariableDict.Add(assignment,value);
				return true;
			case 'b':
				if (VariableDict.ContainsKey('b')) VariableDict.Remove('b');
				VariableDict.Add(assignment,value);
				return true;
			case 'c':
				if (VariableDict.ContainsKey('c')) VariableDict.Remove('c');
				VariableDict.Add(assignment, value);
				return true;
			case 'd':
				if (VariableDict.ContainsKey('d')) VariableDict.Remove('d');
				VariableDict.Add(assignment, value);
				return true;
			case 'e':
				if (VariableDict.ContainsKey('e')) VariableDict.Remove('e');
				VariableDict.Add(assignment, value);
				return true;
			default:
				return false;
			}
			
		}
		
		
		
		
	}
}

